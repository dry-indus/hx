kind: pipeline
type: docker
name: linux_amd64

environment:
  GOOS: linux
  GOARCH: amd64
  CGO_ENABLED: 0  
  SERVER_NAME: 
    from_secret: server_name
  SERVER_HOST: 
    from_secret: server_host
  SERVER_PORT: 
    from_secret: server_port
  SERVER_IMAGE: 
    from_secret: server_image
  SERVER_SSH_KEY:
    from_secret: server_ssh_key
  DOCKER_USERNAME: 
    from_secret: docker_username
  DOCKER_PASSWORD: 
    from_secret: docker_password

steps:
- name: build
  image: golang:1.17
  commands:
  - echo $SERVER_NAME
  - echo $DOCKER_USERNAME 
  - echo $SERVER_IMAGE 
  - pwd
  - go version
  - go mod tidy
  - go build -v -a -o release/$GOOS/$GOARCH/$SERVER_NAME

- name: publish
  image: plugins/docker:latest
  settings:
    username: $DOCKER_USERNAME
    password: $DOCKER_PASSWORD
    repo: $SERVER_IMAGE
    tags: latest

- name: deploy
  image: appleboy/drone-ssh
  pull: always
  settings:
    host: $SERVER_HOST
    user: root
    key:
      from_secret: $SERVER_SSH_KEY
    script:
      - docker ps -q --filter name=$SERVER_NAME | grep -q . && docker stop $SERVER_NAME && docker rmi -f docker rmi -f $SERVER_NAME
      - echo "docker image pulling..."
      - docker pull $SERVER_IMAGE:latest
      - echo "docker container running..."
      - docker run -n $SERVER_NAME -p $SERVER_PORT -d example/demo
      - docker logs --tail $SERVER_NAME