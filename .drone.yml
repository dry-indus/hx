kind: pipeline
type: docker
name: linux_amd64

environment:
  GOOS: linux
  GOARCH: amd64
  CGO_ENABLED: 0
  SERVER_NAME: server_name
  DOCKER_USERNAME: docker_username
  SERVER_IMAGE: server_image

steps:
- name: build
  image: golang:1.17
  commands:
  - echo ${SERVER_NAME}
  - echo ${DOCKER_USERNAME} 
  - echo ${SERVER_IMAGE} 
  - pwd
  - go version
  - go mod tidy
  - go build -v -a -o release/${GOOS}/${GOARCH}/${server_name}

- name: publish
  image: plugins/docker:latest
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    repo: server_image
    tags: latest

- name: deploy
  image: appleboy/drone-ssh
  pull: always
  settings:
    host: server_host
    user: root
    key:
      from_secret: server_ssh_key
    script:
      - docker ps -q --filter name=${server_name} | grep -q . && docker stop ${server_name} && docker rmi -f docker rmi -f ${server_name}
      - echo "docker image pulling..."
      - docker pull ${server_image}:latest
      - echo "docker container running..."
      - docker run -n ${server_name} -p ${server_port} -d example/demo
      - docker logs --tail ${server_name}